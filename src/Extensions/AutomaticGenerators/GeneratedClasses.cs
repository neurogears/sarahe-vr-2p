//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.9.0.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace AutomaticGenerators
{
    #pragma warning disable // Disable all warnings

    public partial class Block
    {
		private int size = 40;
		public int Size
		{
			get { return size; }
			set { size = value; }
		}

		private int tailSize = 0;
		public int TailSize
		{
			get { return tailSize; }
			set { tailSize = value; }
		}

        public System.Collections.Generic.IList<double> TrialProbability { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class CorridorSegment
    {
		private bool initialVisibility = true;
		public bool InitialVisibility
		{
			get { return initialVisibility; }
			set { initialVisibility = value; }
		}

        public string Name { get; set; }

		private double positionEnd = 1D;
		public double PositionEnd
		{
			get { return positionEnd; }
			set { positionEnd = value; }
		}

		private double positionStart = 0D;
		public double PositionStart
		{
			get { return positionStart; }
			set { positionStart = value; }
		}

        public StimControl StimControl { get; set; }

		private string textureLeft = "Assets\\Textures\\null.png";
		public string TextureLeft
		{
			get { return textureLeft; }
			set { textureLeft = value; }
		}

		private string textureRight = "Assets\\Textures\\null.png";
		public string TextureRight
		{
			get { return textureRight; }
			set { textureRight = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class FloorSegment
    {
		private bool initialVisibility = true;
		public bool InitialVisibility
		{
			get { return initialVisibility; }
			set { initialVisibility = value; }
		}

        public string Name { get; set; }

		private double positionEnd = 1D;
		public double PositionEnd
		{
			get { return positionEnd; }
			set { positionEnd = value; }
		}

		private double positionStart = 0D;
		public double PositionStart
		{
			get { return positionStart; }
			set { positionStart = value; }
		}

		private string texture = "Assets\\Textures\\null.png";
		public string Texture
		{
			get { return texture; }
			set { texture = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class OptoStimProtocol
    {
		private double delay = 0D;
		public double Delay
		{
			get { return delay; }
			set { delay = value; }
		}

		private double location = 0D;
		public double Location
		{
			get { return location; }
			set { location = value; }
		}

		private int waveformIndex = 0;
		public int WaveformIndex
		{
			get { return waveformIndex; }
			set { waveformIndex = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class PassiveModeProtocol
    {
		private double gain = 0D;
		public double Gain
		{
			get { return gain; }
			set { gain = value; }
		}

		private double locationEnd = 0D;
		public double LocationEnd
		{
			get { return locationEnd; }
			set { locationEnd = value; }
		}

		private double locationStart = 0D;
		public double LocationStart
		{
			get { return locationStart; }
			set { locationStart = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class RewardProtocol
    {
		private double amountHigh = 0D;
		public double AmountHigh
		{
			get { return amountHigh; }
			set { amountHigh = value; }
		}

		private double amountLow = 0D;
		public double AmountLow
		{
			get { return amountLow; }
			set { amountLow = value; }
		}

		private double delay = 0D;
		public double Delay
		{
			get { return delay; }
			set { delay = value; }
		}

		private double location = 0D;
		public double Location
		{
			get { return location; }
			set { location = value; }
		}

		private double probabilityHigh = 1D;
		public double ProbabilityHigh
		{
			get { return probabilityHigh; }
			set { probabilityHigh = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class TeleportOnLickProtocol
    {
		private double destination = 0D;
		public double Destination
		{
			get { return destination; }
			set { destination = value; }
		}

		private double locationEnd = 10D;
		public double LocationEnd
		{
			get { return locationEnd; }
			set { locationEnd = value; }
		}

		private double locationStart = 0D;
		public double LocationStart
		{
			get { return locationStart; }
			set { locationStart = value; }
		}

        public int? MaxRepeats { get; set; }

		private double refractoryDuration = 0D;
		public double RefractoryDuration
		{
			get { return refractoryDuration; }
			set { refractoryDuration = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class TeleportProtocol
    {
		private double destination = 0D;
		public double Destination
		{
			get { return destination; }
			set { destination = value; }
		}

		private bool endTrialOnTeleport = true;
		public bool EndTrialOnTeleport
		{
			get { return endTrialOnTeleport; }
			set { endTrialOnTeleport = value; }
		}

		private double location = 10D;
		public double Location
		{
			get { return location; }
			set { location = value; }
		}

		private bool lockAtLocation = false;
		public bool LockAtLocation
		{
			get { return lockAtLocation; }
			set { lockAtLocation = value; }
		}

		private double lockAtLocationDuration = 0D;
		public double LockAtLocationDuration
		{
			get { return lockAtLocationDuration; }
			set { lockAtLocationDuration = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class Trial
    {
        public System.Collections.Generic.IList<CorridorSegment> CorridorSegments { get; set; }

        public System.Collections.Generic.IList<FloorSegment> FloorSegments { get; set; }

        public System.Collections.Generic.IList<OptoStimProtocol> OptoStim { get; set; }

        public System.Collections.Generic.IList<PassiveModeProtocol> PassiveMode { get; set; }

        public System.Collections.Generic.IList<RewardProtocol> Reward { get; set; }

        public System.Collections.Generic.IList<TeleportProtocol> Teleport { get; set; }

        public System.Collections.Generic.IList<TeleportOnLickProtocol> TeleportOnLick { get; set; }

		private string trialTypeLabel = "";
		public string TrialTypeLabel
		{
			get { return trialTypeLabel; }
			set { trialTypeLabel = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class CorridorSession
    {
        public Metadata Metadata { get; set; }

        public System.Collections.Generic.IList<Trial> Trials { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class StimControl
    {
		private double delay = 0D;
		public double Delay
		{
			get { return delay; }
			set { delay = value; }
		}

		private bool leftValue = true;
		public bool LeftValue
		{
			get { return leftValue; }
			set { leftValue = value; }
		}

		private double location = 0D;
		public double Location
		{
			get { return location; }
			set { location = value; }
		}

		private bool rightValue = true;
		public bool RightValue
		{
			get { return rightValue; }
			set { rightValue = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class Metadata
    {
		private string animalId = "";
		public string AnimalId
		{
			get { return animalId; }
			set { animalId = value; }
		}

        public int? RandomSeed { get; set; }

        public RewardCalibration RewardCalibration { get; set; }

		private string rootPath = "";
		public string RootPath
		{
			get { return rootPath; }
			set { rootPath = value; }
		}

        public TrialOrder TrialOrder { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class RewardCalibration
    {
		private double intercept = 0D;
		public double Intercept
		{
			get { return intercept; }
			set { intercept = value; }
		}

		private double slope = 1D;
		public double Slope
		{
			get { return slope; }
			set { slope = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public partial class TrialOrder
    {
        public System.Collections.Generic.IList<Block> Blocks { get; set; }

		private TrialOrderMode mode = AutomaticGenerators.TrialOrderMode.List;
		public TrialOrderMode Mode
		{
			get { return mode; }
			set { mode = value; }
		}



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    public enum TrialOrderMode
    {

        List = 0,


        Shuffle = 1,


        Block = 2,


    }
}
