<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.0-alpha018"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:gl="clr-namespace:Bonsai.Shaders;assembly=Bonsai.Shaders"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="WorkflowInput">
        <Name>Source1</Name>
      </Expression>
      <Expression xsi:type="rx:CreateObservable">
        <Name>DrawSegment</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>SegmentSpecs</Name>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>StimControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SegmentSpecs</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>InitialVisibility</Selector>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>VisibilityLeft</Name>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>VisibilityRight</Name>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>SetWallStim</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CurrentPosition</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item1.Z,Item2.StimControl.Location</Selector>
                        </Expression>
                        <Expression xsi:type="GreaterThan" />
                        <Expression xsi:type="rx:Condition">
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>StimControl.Delay</Selector>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>TimeSpan.FromSeconds(it)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Delay">
                            <gl:DueTime>PT0S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>StimControl</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item2</Selector>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>WallVisibilityEvent</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source1" />
                        <Edge From="1" To="2" Label="Source2" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="11" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source2" />
                        <Edge From="11" To="14" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source2" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SegmentSpecs</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>StimControl</Selector>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>it == null</scr:Expression>
                        </Expression>
                        <Expression xsi:type="BitwiseNot" />
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:SubscribeWhen" />
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>TriggerStimuli</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="4" To="8" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source2" />
                  <Edge From="8" To="9" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Render</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>DrawLeftWall</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Draw3DStim</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CorridorSpecs</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>WidthOffset</Selector>
                        </Expression>
                        <Expression xsi:type="Multiply">
                          <Operand xsi:type="DoubleProperty">
                            <Value>-1</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CorridorSpecs</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(
(it.PositionEnd - it.PositionStart) as Length,
0.5 * (it.PositionEnd - it.PositionStart) + it.PositionStart  as Center)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:CombineLatest" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(
it.Item1 as Draw,
it.Item2 as WidthOffset,
it.Item3 as CorridorSpecs,
it.Item4 as SegmentSpecs,
it.Item5 as PostSegmentSpecs)
</scr:Expression>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>VisibilityLeft</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Name>IsVisible?</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Item2</Selector>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item1</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Draw</Selector>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="Extensions\TranslateView.bonsai">
                          <PositionVec3>CurrentPosition</PositionVec3>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="GroupWorkflow">
                          <Name>BindTexture</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Textures</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Left</Selector>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:WithLatestFrom" />
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Item2</Selector>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="gl:BindTexture">
                                  <gl:TextureSlot>Texture0</gl:TextureSlot>
                                  <gl:ShaderName>TexturedModel</gl:ShaderName>
                                  <gl:TextureName />
                                  <gl:TextureTarget>Texture2D</gl:TextureTarget>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="3" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                              <Edge From="2" To="3" Label="Source2" />
                              <Edge From="3" To="4" Label="Source1" />
                              <Edge From="4" To="5" Label="Source1" />
                              <Edge From="5" To="6" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item2</Selector>
                        </Expression>
                        <Expression xsi:type="InputMapping">
                          <PropertyMappings>
                            <Property Name="TranslationZ" Selector="Item2.PostSegmentSpecs.Center" />
                            <Property Name="TranslationX" Selector="Item2.WidthOffset" />
                            <Property Name="TranslationY" Selector="Item2.CorridorSpecs.HeightOffset" />
                            <Property Name="ScaleY" Selector="Item2.CorridorSpecs.Height" />
                            <Property Name="ScaleX" Selector="Item2.PostSegmentSpecs.Length" />
                          </PropertyMappings>
                          <Selector>Item1</Selector>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawTexturedModel.bonsai">
                          <TranslationX>-0.5</TranslationX>
                          <TranslationY>0.25</TranslationY>
                          <TranslationZ>4.75</TranslationZ>
                          <RotationZ>0</RotationZ>
                          <RotationY>90</RotationY>
                          <RotationX>0</RotationX>
                          <ScaleX>0.5</ScaleX>
                          <ScaleY>0.5</ScaleY>
                          <ScaleZ>1</ScaleZ>
                          <Ambient>
                            <X>1</X>
                            <Y>1</Y>
                            <Z>1</Z>
                          </Ambient>
                          <Diffuse>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                          </Diffuse>
                          <Specular>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                          </Specular>
                          <SpecularExponent>1</SpecularExponent>
                          <MeshName>Plane</MeshName>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="8" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="8" Label="Source2" />
                        <Edge From="4" To="8" Label="Source3" />
                        <Edge From="5" To="8" Label="Source4" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source5" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="11" Label="Source1" />
                        <Edge From="10" To="11" Label="Source2" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="13" To="16" Label="Source2" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="16" To="18" Label="Source2" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source1" />
                        <Edge From="19" To="20" Label="Source1" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>DrawRightWall</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Draw3DStim</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CorridorSpecs</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>WidthOffset</Selector>
                        </Expression>
                        <Expression xsi:type="Multiply">
                          <Operand xsi:type="DoubleProperty">
                            <Value>1</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CorridorSpecs</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(
(it.PositionEnd - it.PositionStart) as Length,
0.5 * (it.PositionEnd - it.PositionStart) + it.PositionStart  as Center)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:CombineLatest" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(
it.Item1 as Draw,
it.Item2 as WidthOffset,
it.Item3 as CorridorSpecs,
it.Item4 as SegmentSpecs,
it.Item5 as PostSegmentSpecs)
</scr:Expression>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>VisibilityRight</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Name>IsVisible?</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Item2</Selector>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item1</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Draw</Selector>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="Extensions\TranslateView.bonsai">
                          <PositionVec3>CurrentPosition</PositionVec3>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="GroupWorkflow">
                          <Name>BindTexture</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>Textures</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Right</Selector>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:WithLatestFrom" />
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Item2</Selector>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="gl:BindTexture">
                                  <gl:TextureSlot>Texture0</gl:TextureSlot>
                                  <gl:ShaderName>TexturedModel</gl:ShaderName>
                                  <gl:TextureName />
                                  <gl:TextureTarget>Texture2D</gl:TextureTarget>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="3" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                              <Edge From="2" To="3" Label="Source2" />
                              <Edge From="3" To="4" Label="Source1" />
                              <Edge From="4" To="5" Label="Source1" />
                              <Edge From="5" To="6" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item2</Selector>
                        </Expression>
                        <Expression xsi:type="InputMapping">
                          <PropertyMappings>
                            <Property Name="TranslationZ" Selector="Item2.PostSegmentSpecs.Center" />
                            <Property Name="TranslationX" Selector="Item2.WidthOffset" />
                            <Property Name="TranslationY" Selector="Item2.CorridorSpecs.HeightOffset" />
                            <Property Name="ScaleY" Selector="Item2.CorridorSpecs.Height" />
                            <Property Name="ScaleX" Selector="Item2.PostSegmentSpecs.Length" />
                          </PropertyMappings>
                          <Selector>Item1</Selector>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawTexturedModel.bonsai">
                          <TranslationX>0.5</TranslationX>
                          <TranslationY>0.25</TranslationY>
                          <TranslationZ>4.75</TranslationZ>
                          <RotationZ>0</RotationZ>
                          <RotationY>90</RotationY>
                          <RotationX>0</RotationX>
                          <ScaleX>0.5</ScaleX>
                          <ScaleY>0.5</ScaleY>
                          <ScaleZ>1</ScaleZ>
                          <Ambient>
                            <X>1</X>
                            <Y>1</Y>
                            <Z>1</Z>
                          </Ambient>
                          <Diffuse>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                          </Diffuse>
                          <Specular>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                          </Specular>
                          <SpecularExponent>1</SpecularExponent>
                          <MeshName>Plane</MeshName>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="8" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="8" Label="Source2" />
                        <Edge From="4" To="8" Label="Source3" />
                        <Edge From="5" To="8" Label="Source4" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source5" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="11" Label="Source1" />
                        <Edge From="10" To="11" Label="Source2" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="13" To="16" Label="Source2" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="16" To="18" Label="Source2" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source1" />
                        <Edge From="19" To="20" Label="Source1" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LoadDefaultTextures</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TextureBank</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>TextureLeft</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Value" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Index">
                          <Operand xsi:type="IntProperty">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TextureBank</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>TextureRight</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Value" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Index">
                          <Operand xsi:type="IntProperty">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(Item1 as Left, Item2 as Right)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>DefaultTextures</Name>
                        </Expression>
                        <Expression xsi:type="rx:BehaviorSubject">
                          <Name>Textures</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="4" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source2" />
                        <Edge From="4" To="10" Label="Source1" />
                        <Edge From="5" To="9" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source2" />
                        <Edge From="9" To="10" Label="Source2" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LoadStimuliTextures</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TextureBank</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>StimControl.StimTextureLeft</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Value" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Index">
                          <Operand xsi:type="IntProperty">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TextureBank</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SegmentSpecs</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>StimControl.StimTextureRight</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Value" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Index">
                          <Operand xsi:type="IntProperty">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(Item1 as Left, Item2 as Right)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>StimTextures</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="4" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source2" />
                        <Edge From="4" To="10" Label="Source1" />
                        <Edge From="5" To="9" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source2" />
                        <Edge From="9" To="10" Label="Source2" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SegmentSpecs</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>StimControl</Selector>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>it == null</scr:Expression>
                        </Expression>
                        <Expression xsi:type="BitwiseNot" />
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:SubscribeWhen" />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="3" To="7" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source2" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>SegmentEvents</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>CorridorSpecs</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SegmentSpecs</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>CurrentPosition</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:CombineLatest" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>new(
it.Item1 as CorridorSpecs,
it.Item2 as SegmentSpecs,
it.Item3 as CurrentPosition)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>SegmentSpecs.Name</Selector>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>SegmentCalculations</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>CurrentPosition.Z,SegmentSpecs.PositionStart</Selector>
                        </Expression>
                        <Expression xsi:type="GreaterThanOrEqual" />
                        <Expression xsi:type="MemberSelector">
                          <Selector>CurrentPosition.Z,SegmentSpecs.PositionEnd</Selector>
                        </Expression>
                        <Expression xsi:type="LessThan" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="BitwiseAnd" />
                        <Expression xsi:type="MemberSelector">
                          <Selector>CurrentPosition.Z,SegmentSpecs.PositionStart</Selector>
                        </Expression>
                        <Expression xsi:type="Subtract" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(
it.Item1 as InSegment,
it.Item2 as RelativeSegmentPosition)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="0" To="3" Label="Source1" />
                        <Edge From="0" To="7" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="5" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="9" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source2" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>new(
it.Item1 as Name,
it.Item2 as Segment,
it.Item3 as SegmentMetrics)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="3" Label="Source2" />
                  <Edge From="2" To="3" Label="Source3" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="4" To="6" Label="Source1" />
                  <Edge From="4" To="7" Label="Source2" />
                  <Edge From="5" To="7" Label="Source1" />
                  <Edge From="6" To="7" Label="Source3" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="SubscribeSubject">
              <Name>TriggerStimuli</Name>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>ToggleStim</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SegmentSpecs</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>StimControl.LeftStimState</Selector>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SegmentSpecs</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>StimControl.RightStimState</Selector>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>StimTextures</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>DefaultTextures</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>new(
it.Item1 ? it.Item3.Left : it.Item4.Left as Left,
it.Item2 ? it.Item3.Right : it.Item4.Right as Right)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>Textures</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="6" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="6" Label="Source2" />
                  <Edge From="4" To="6" Label="Source3" />
                  <Edge From="5" To="6" Label="Source4" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>